{"ast":null,"code":"var _jsxFileName = \"/home/hemasudhashini/Desktop/cart/src/component/StudentDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Grid from \"./Grid\";\nimport EditModal from \"./EditModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDetails() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [editedStudent, setEditedStudent] = useState(null);\n  const [activeTab, setActiveTab] = useState(false);\n  const maxLocalStorageItems = 36;\n\n  // Load student data from localStorage when the component mounts\n  useEffect(() => {\n    const storedStudents = JSON.parse(localStorage.getItem(\"students\"));\n    if (storedStudents) {\n      setStudents(storedStudents);\n    }\n  }, []);\n  const addStudent = student => {\n    if (students.length >= maxLocalStorageItems) {\n      // alert(\"Maximum limit reached. You cannot add more students.\");\n      console.log(\"Maximum limit reached. You cannot add more students\");\n      return;\n    }\n    const newStudent = {\n      ...student,\n      id: Date.now()\n    };\n    const updatedStudents = [...students, newStudent];\n    setStudents(updatedStudents);\n    localStorage.setItem(\"students\", JSON.stringify(updatedStudents));\n  };\n  const editStudent = student => {\n    setEditedStudent(student);\n  };\n  const saveEditedStudent = editedInfo => {\n    setStudents(prevStudents => prevStudents.map(student => student.id === editedStudent.id ? {\n      ...student,\n      ...editedInfo\n    } : student));\n    setEditedStudent(null);\n    localStorage.setItem(\"students\", JSON.stringify(students));\n  };\n  const deleteStudent = student => {\n    const updatedStudents = students.filter(s => s.id !== student.id);\n    setStudents(updatedStudents);\n    localStorage.setItem(\"students\", JSON.stringify(updatedStudents));\n  };\n  useEffect(() => {\n    const storedStudents = JSON.parse(localStorage.getItem(\"students\"));\n    if (storedStudents) {\n      setStudents(storedStudents);\n    }\n  }, []);\n  const handleClose = () => {\n    setActiveTab(true);\n    console.log(\"activeTab\", activeTab);\n  };\n  const filterStudentsAboveAge = age => {\n    return students.filter(student => student.age > age);\n  };\n  const filterStudentsBelowAge = age => {\n    return students.filter(student => student.age < age);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: addStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), editedStudent && /*#__PURE__*/_jsxDEV(EditModal, {\n      onSubmit: saveEditedStudent,\n      editedStudent: editedStudent,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      students: students,\n      onEdit: editStudent,\n      onDelete: deleteStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDetails, \"R0q6q0Xw2W9aUqI/atGqZlFW96k=\");\n_c = StudentDetails;\nexport default StudentDetails;\nvar _c;\n$RefreshReg$(_c, \"StudentDetails\");","map":{"version":3,"names":["React","useState","useEffect","Form","Grid","EditModal","jsxDEV","_jsxDEV","StudentDetails","_s","students","setStudents","editedStudent","setEditedStudent","activeTab","setActiveTab","maxLocalStorageItems","storedStudents","JSON","parse","localStorage","getItem","addStudent","student","length","console","log","newStudent","id","Date","now","updatedStudents","setItem","stringify","editStudent","saveEditedStudent","editedInfo","prevStudents","map","deleteStudent","filter","s","handleClose","filterStudentsAboveAge","age","filterStudentsBelowAge","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/home/hemasudhashini/Desktop/cart/src/component/StudentDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Grid from \"./Grid\";\nimport EditModal from \"./EditModal\";\n\nfunction StudentDetails() {\n  const [students, setStudents] = useState([]);\n  const [editedStudent, setEditedStudent] = useState(null);\n  const [activeTab, setActiveTab] = useState(false);\n  const maxLocalStorageItems = 36;\n\n  // Load student data from localStorage when the component mounts\n  useEffect(() => {\n    const storedStudents = JSON.parse(localStorage.getItem(\"students\"));\n    if (storedStudents) {\n      setStudents(storedStudents);\n    }\n  }, []);\n\n  const addStudent = (student) => {\n \n    if (students.length >= maxLocalStorageItems) {\n        // alert(\"Maximum limit reached. You cannot add more students.\");\n        console.log(\"Maximum limit reached. You cannot add more students\")\n        return;\n      }\n    const newStudent = { ...student, id: Date.now() };\n    const updatedStudents = [...students, newStudent];\n    setStudents(updatedStudents);\n\n    localStorage.setItem(\"students\", JSON.stringify(updatedStudents));\n  };\n\n  const editStudent = (student) => {\n    setEditedStudent(student);\n  };\n\n  const saveEditedStudent = (editedInfo) => {\n    setStudents((prevStudents) =>\n      prevStudents.map((student) =>\n        student.id === editedStudent.id ? { ...student, ...editedInfo } : student\n      )\n    );\n    setEditedStudent(null);\n    localStorage.setItem(\"students\", JSON.stringify(students));\n  };\n\n  const deleteStudent = (student) => {\n    const updatedStudents = students.filter((s) => s.id !== student.id);\n    setStudents(updatedStudents);\n\n    localStorage.setItem(\"students\", JSON.stringify(updatedStudents));\n  };\n\n\n  useEffect(() => {\n    const storedStudents = JSON.parse(localStorage.getItem(\"students\"));\n    if (storedStudents) {\n      setStudents(storedStudents);\n    }\n  }, []);\n  const handleClose = () => {\n    setActiveTab(true);\n    console.log(\"activeTab\",activeTab)\n  }; \n\n  const filterStudentsAboveAge = (age) => {\n    return students.filter((student) => student.age > age);\n  };\n\n  const filterStudentsBelowAge = (age) => {\n    return students.filter((student) => student.age < age);\n  };\n\n  return (\n    <div className=\"App\">\n      <Form onSubmit={addStudent} />\n      {editedStudent && (\n        <EditModal onSubmit={saveEditedStudent} editedStudent={editedStudent}  handleClose={handleClose} />\n      )}\n      <h2>Students</h2>\n      <Grid students={students} onEdit={editStudent} onDelete={deleteStudent}  />\n    </div>\n  );\n}\n\nexport default StudentDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,oBAAoB,GAAG,EAAE;;EAE/B;EACAd,SAAS,CAAC,MAAM;IACd,MAAMe,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACnE,IAAIJ,cAAc,EAAE;MAClBN,WAAW,CAACM,cAAc,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,UAAU,GAAIC,OAAO,IAAK;IAE9B,IAAIb,QAAQ,CAACc,MAAM,IAAIR,oBAAoB,EAAE;MACzC;MACAS,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;MAClE;IACF;IACF,MAAMC,UAAU,GAAG;MAAE,GAAGJ,OAAO;MAAEK,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC;IACjD,MAAMC,eAAe,GAAG,CAAC,GAAGrB,QAAQ,EAAEiB,UAAU,CAAC;IACjDhB,WAAW,CAACoB,eAAe,CAAC;IAE5BX,YAAY,CAACY,OAAO,CAAC,UAAU,EAAEd,IAAI,CAACe,SAAS,CAACF,eAAe,CAAC,CAAC;EACnE,CAAC;EAED,MAAMG,WAAW,GAAIX,OAAO,IAAK;IAC/BV,gBAAgB,CAACU,OAAO,CAAC;EAC3B,CAAC;EAED,MAAMY,iBAAiB,GAAIC,UAAU,IAAK;IACxCzB,WAAW,CAAE0B,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEf,OAAO,IACvBA,OAAO,CAACK,EAAE,KAAKhB,aAAa,CAACgB,EAAE,GAAG;MAAE,GAAGL,OAAO;MAAE,GAAGa;IAAW,CAAC,GAAGb,OACpE,CACF,CAAC;IACDV,gBAAgB,CAAC,IAAI,CAAC;IACtBO,YAAY,CAACY,OAAO,CAAC,UAAU,EAAEd,IAAI,CAACe,SAAS,CAACvB,QAAQ,CAAC,CAAC;EAC5D,CAAC;EAED,MAAM6B,aAAa,GAAIhB,OAAO,IAAK;IACjC,MAAMQ,eAAe,GAAGrB,QAAQ,CAAC8B,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACb,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IACnEjB,WAAW,CAACoB,eAAe,CAAC;IAE5BX,YAAY,CAACY,OAAO,CAAC,UAAU,EAAEd,IAAI,CAACe,SAAS,CAACF,eAAe,CAAC,CAAC;EACnE,CAAC;EAGD7B,SAAS,CAAC,MAAM;IACd,MAAMe,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACnE,IAAIJ,cAAc,EAAE;MAClBN,WAAW,CAACM,cAAc,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EACN,MAAMyB,WAAW,GAAGA,CAAA,KAAM;IACxB3B,YAAY,CAAC,IAAI,CAAC;IAClBU,OAAO,CAACC,GAAG,CAAC,WAAW,EAACZ,SAAS,CAAC;EACpC,CAAC;EAED,MAAM6B,sBAAsB,GAAIC,GAAG,IAAK;IACtC,OAAOlC,QAAQ,CAAC8B,MAAM,CAAEjB,OAAO,IAAKA,OAAO,CAACqB,GAAG,GAAGA,GAAG,CAAC;EACxD,CAAC;EAED,MAAMC,sBAAsB,GAAID,GAAG,IAAK;IACtC,OAAOlC,QAAQ,CAAC8B,MAAM,CAAEjB,OAAO,IAAKA,OAAO,CAACqB,GAAG,GAAGA,GAAG,CAAC;EACxD,CAAC;EAED,oBACErC,OAAA;IAAKuC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxC,OAAA,CAACJ,IAAI;MAAC6C,QAAQ,EAAE1B;IAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7BxC,aAAa,iBACZL,OAAA,CAACF,SAAS;MAAC2C,QAAQ,EAAEb,iBAAkB;MAACvB,aAAa,EAAEA,aAAc;MAAE8B,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnG,eACD7C,OAAA;MAAAwC,QAAA,EAAI;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB7C,OAAA,CAACH,IAAI;MAACM,QAAQ,EAAEA,QAAS;MAAC2C,MAAM,EAAEnB,WAAY;MAACoB,QAAQ,EAAEf;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV;AAAC3C,EAAA,CA/EQD,cAAc;AAAA+C,EAAA,GAAd/C,cAAc;AAiFvB,eAAeA,cAAc;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}